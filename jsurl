javascript:(function()%7Bfunction showButtons(buttons) { let html = '<div style="position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); text-align: center;"><h1>Available Formats:</h1>'; buttons.forEach((v) => { html += `<button onclick="replacePlayer(generateVideoHTML('${v.link}'))">${v.format}</button>`; }); html += "</div>"; replacePlayer(html); }; function generateVideoHTML(link) { return `<iframe allowfullscreen="true" src="${link}" style="width: 100%; height: 100%; border: 0;"></iframe>`; }; function replacePlayer(newHTML) { (document.querySelector("#error-screen > #container") != null ? document.querySelector("#error-screen > #container") : document.body).innerHTML = newHTML; }; (async function(data = "") { replacePlayer('<div style="position: absolute; left: 50%; top: 50%; transform: translate(-50%, -50%); text-align: center;"><h1>Loading...</h1></div>'); if (data == "") { if (location.hostname.replace("www.","") == "youtube.com") { let videoID = location.href.match(/v\=[a-zA-z0-9-\_]{11}/)[0].toString().substring(2,13); data = await (await fetch("https://www.youtube.com/get_video_info?video_id="+videoID)).text(); } else { data = await (await fetch("http://cors-anywhere.herokuapp.com/https://www.youtube.com/get_video_info?video_id="+prompt("You are not on YouTube, please enter a YouTube Video URL:").match(/v\=[a-zA-z0-9-\_]{11}/)[0].toString().substring(2,13))).text(); } }; let responseObject = {}; data.split("&").forEach((value) => { kv = value.split("="); responseObject[kv[0]] = unescape(kv[1]); }); let playerResponse = JSON.parse(responseObject.player_response); let availFormats = playerResponse.streamingData.formats; let buttons = []; availFormats.forEach((val) => { buttons.push({format: val.qualityLabel, link: val.url}); }); showButtons(buttons); })();%7D)()